sd(trt1$weight)
trt2 = filter(PlantGrowth, group == 'trt2')
sd(trt2$weight)
bartlett.test(weight~group, PlantGrowth)
#3
aov(weight ~ group, data = PlantGrowth)
plot(weight ~ group, data = PlantGrowth)
results = aov(weight ~ group, data = PlantGrowth)
plot(weight ~ group, data = PlantGrowth)
TukeyHSD(results, conf.level = 0.95)
aov(weight ~ group, data = PlantGrowth)
pairwise.t.test(weight, group, p.adjust="bonferroni")
pairwise.t.test(PlantGrowth$weight, PlantGrowth$group, p.adjust="bonferroni")
summary(results)
HairEyeColor
## Question #3: Gender, Hair, & Eye Color
#1
mosaicplot(HairEyeColor, shade = TRUE)
attributes(HairEyeColor)
#2
filter(HairEyeColor, Sex == 'Female')
#2
HairEyeColor[1]
#2
HairEyeColor[[1]]
#2
HairEyeColor[4,1,1]
#2
HairEyeColor[,1,1]
#2
HairEyeColor[,c(1,2),1]
#2
data = HairEyeColor[,c(1,2),1]
#2
data = HairEyeColor[,c(1,2),2]
HairEyeColor[,c(1,2),2]
mosaicplot(data)
mosaicplot(data, shade = T)
chisq.test(data)
table(temp)
#3
chis$residuals
test = chisq.test(data)
#3
test$residuals
getwd()
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message=FALSE)
# Your code here
library('PASWR')
install.packages('PASWR')
# Your code here
library('PASWR')
titanic3
titanic3
aggr(sleep)
source('~/Desktop/NYC_Data/machine learning/[02] Missingness, Imputation, & KNN Lecture Code.R')
summary(sleep)
summary(titanic3)
aggr(titanic3)
aggr(titanic3)
is.na(titanic3)
complete.cases(titanic3)
titanic3[complete.cases(titanic3),]
titanic3[!complete.cases(titanic3),]
titanic3[!complete.cases(titanic3),]
nrow(titanic3[!complete.cases(titanic3),])
nrow(titanic3[!complete.cases(titanic3),])/nrow(titanic3)
table(titanic3)
dim(titanic3)
dim(titanic3)[1]
```{r}
dim(titanic3)[1]*dim(titanic3)[2]
sapply(titanic3, function(x) sum(is.na(x)))
sum(sapply(titanic3, function(x) sum(is.na(x))))
sum(sapply(titanic3, function(x) sum(is.na(x))))/dim(titanic3)[1]*dim(titanic3)[2]
sum(sapply(titanic3, function(x) sum(is.na(x))))
dim(titanic3)[1]*dim(titanic3)[2]
sum(sapply(titanic3, function(x) sum(is.na(x))))/(dim(titanic3)[1]*dim(titanic3)[2])
sum(sapply(titanic3, function(x) sum(is.na(x))))/(dim(titanic3)[1]*dim(titanic3)[2])*100
aggr(titanic3)
library(mice)
md.pattern(titanic3)
library(mice)
md.pattern(titanic3)
c = titanic3
View(c)
View(c)
data = (titanic3, na.strings = c("", "NA"))
apply(titanic3, 2, function(x) gsub("^$|^ $", NA, x))
summary(titanic)
titanic = apply(titanic3, 2, function(x) gsub("^$|^ $", NA, x))
summary(titanic)
summary(titanic)
aggr(titanic)
nrow(titanic[!complete.cases(titanic3),])
nrow(titanic[!complete.cases(titanic),])
nrow(titanic[!complete.cases(titanic),])
nrow(titanic[!complete.cases(titanic),])/nrow(titanic)
nrow(titanic)
dim(titanic)[1]*dim(titanic)[2]
sum(sapply(titanic, function(x) sum(is.na(x))))
sum(sapply(titanic, function(x) sum(is.na(x))))/(dim(titanic)[1]*dim(titanic)[2])
mean(titanic$age)
mean(titanic$age)
mean(titanic.age)
titanic['age',]
titanic['age']
titanic$age
titanic3$age
titanic['age']
titanic
titanic[,'age']
mean(titanic[,'age'])
mean(titanic[,'age'], na.rm = T)
titanic[,'age']
titanic$age
titanic3$age
mean(as.numeric(titanic[,'age']), na.rm = T)
titanic$age
titanic[,'age'] == 'NA'
titanic[titanic[,'age'] == 'NA']
titanic[titanic[,'age'] == 'NA'] = mean(as.numeric(titanic[,'age']), na.rm = T)
View(titanic)
titanic
mean(as.numeric(titanic[,'age']), na.rm = T)
titanic[titanic[,'age'] == 'NA'] = mean(as.numeric(titanic[,'age']), na.rm = T)
mean(as.numeric(titanic[,'age']), na.rm = T)
titanic[titanic[,'age'] == 'NA'] = mean(as.numeric(titanic[,'age']), na.rm = T)
is.na(titanic[,'age'])
titanic[is.na(titanic[,'age'])]
titanic[is.na(titanic[,'age'])]['age']
titanic['age'][is.na(titanic[,'age'])]
titanic['age'][is.na(titanic[,'age'])] = mean(as.numeric(titanic[,'age']), na.rm = T)
titanic['age'][is.na(titanic[,'age'])] = 29
titanic['age'][is.na(titanic['age'])]
is.na(titanic['age'])
titanic = apply(titanic3, 2, function(x) gsub("^$|^ $", NA, x))
View(titanic)
is.na(titanic['age'])
titanic['age'][is.na(titanic['age'])]
[is.na(titanic[,'age'])]
is.na(titanic[,'age'])
titanic[[is.na(titanic[,'age'])]]
titanic[is.na(titanic[,'age'])]
t  =titanic[is.na(titanic[,'age'])]
titanic$ag
titanic$age
titanit['age']
titanic['age']
titanic[,'age']
titanic[,'age'] <- ifelse(is.na(titanic[,'age']),
mean(as.numeric(titanic[,'age']), na.rm = T), titanic[,'age'])
View(c)
impute(titanic[,'age'], "random")
titanic = apply(titanic3, 2, function(x) gsub("^$|^ $", NA, x))
impute(titanic[,'age'], "random")
plot(titanic[,'age'])
source('~/Desktop/NYC_Data/machine learning/[02] Missingness, Imputation, & KNN Lecture Code.R')
plot(missing.data)
plot(titanic[,'age'])
titanic[,'age'] = impute(titanic[,'age'], "random")
plot(titanic[,'age'])
titanic = apply(titanic3, 2, function(x) gsub("^$|^ $", NA, x))
summary(titanic)
plot(titanic[,'age'])
plot(titanic[,'age'])
library(ggplot2)
ggplot(titanic, aes(age)) + geom_bar()
class(titanic)
data.frame(titanic)
titanic = data.frame(titanic)
library(ggplot2)
ggplot(titanic, aes(age)) + geom_bar()
ggplot(titanic, aes(age)) + geom_bar()
ggplot(titanic, aes(age)) + geom_histogram()
ggplot(titanic, aes(age)) + geom_histogram(stat = 'count')
hist(titanic$age)
```{r}
hist(im_age)
im_age = impute(titanic[,'age'], "random")
hist(im_age)
im_age = impute(as.numeric(titanic[,'age']), "random")
hist(im_age)
hist(titanic$age)
hist(as.numeric(titanic$age))
titanic = apply(titanic3, 2, function(x) gsub("^$|^ $", NA, x))
titanic = data.frame(titanic)
hist(as.numeric(titanic$age))
hist(as.numeric(titanic$age))
hist(im_age)
source('~/Desktop/medical_google/scraping_proj.R')
ggplot(apps_paid2, aes(Price, Installs)) + geom_bar(stat = 'identity', fill = 'khaki4') + ggtitle('Distribution of Installs of Paid Apps') +
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5), plot.title = element_text(hjust = 0.5)) + scale_x_discrete(labels = labels1) + scale_y_continuous(labels = scales::comma)
titanic = data.frame(titanic)
hist(as.numeric(titanic$age))
impute(titanic$fare, 'random')
fare1 = impute(titanic$fare, 'random')
summary(fare1)
summary(impute(titanic$fare, 'random'))
impute(titanic$fare, 'random')
is.na(titanic$fare)
any( is.na(titanic$fare))
any(is.na(titanic$age))
any(is.na(titanic$body))
titanic_1$fare = impute(titanic$fare, 'random')
titanic$fare = impute(titanic$fare, 'random')
any( is.na(titanic$fare))
titanic$age = impute(as.numeric(titanic[,'age']), "random")
hist(titanic$age)
library(ggplot2)
ggplot(titanic, aes(age, fare, color = pclass)) + geom_point()
class(titanic$fare)
class(tita$fare)
class(titanic3$fare)
ggplot(titanic, aes(age, as.numeric(fare), color = pclass)) + geom_point()
ggplot(titanic, aes(age, as.numeric(fare), color = pclass)) + geom_point() + geom_point(aes(x=50, y=400), colour="black") + geom_point(aes(x=10, y=100), colour="black")
ggplot(titanic, aes(age, as.numeric(fare), color = pclass)) + geom_point()
View(titanic)
ggplot(titanic, aes(age, as.numeric(fare), color = pclass)) + geom_point() + geom_point(aes(x=50, y=400), colour="black") + geom_point(aes(x=10, y=100), colour="black")
titanic$fare
imputed.x2 = impute(missing.data$x2, "random")
class(imputed.x2)
plot(missing.data)
View(titanic)
ggplot(titanic, aes(age, as.numeric(fare), color = pclass)) + geom_point() + geom_point(aes(x=50, y=400), colour="black") + geom_point(aes(x=10, y=100), colour="black")
library(Hmisc)
library(Hmisc)
titanic$age = impute(as.numeric(titanic[,'age']), "random")
hist(titanic$age)
hist(titanic$age)
titanic = data.frame(titanic)
titanic$age = impute(as.numeric(titanic$age), "random")
hist(titanic$age)
titanic = data.frame(titanic)
hist(as.numeric(titanic$age))
hist(titanic$age)
hist(as.numeric(titanic$age))
library(Hmisc)
titanic = data.frame(titanic)
titanic$age = impute(as.numeric(titanic$age), "random")
hist(titanic$age)
titanic$fare = impute(titanic$fare, 'random')
summary(impute(titanic$fare, 'random'))
#imputed 26
ggplot(titanic, aes(age, as.numeric(fare), color = pclass)) + geom_point()
ggplot(titanic, aes(age, fare, color = pclass)) + geom_point()
ggplot(titanic, aes(age, as.numeric(fare), color = pclass)) + geom_point()
ggplot(titanic, aes(age, as.numeric(fare), color = pclass)) + geom_point() + geom_point(aes(x=50, y=400), colour="black") + geom_point(aes(x=10, y=100), colour="black")
ggplot(titanic3, aes(age, as.numeric(fare), color = pclass)) + geom_point() + geom_point(aes(x=50, y=400), colour="black") + geom_point(aes(x=10, y=100), colour="black")
mean(as.numeric(titanic3$age), na.rm = T)
titanic3$age = ifelse(is.na(titanic3$age),
mean(titanic3$age), na.rm = T), titanic3$age)
mean(as.numeric(titanic3$age), na.rm = T)
titanic3$age = ifelse(is.na(titanic3$age),
mean(titanic3$age, na.rm = T), titanic3$age)
View(titanic3)
titanic3$age = impute(as.numeric(titanic3$age), "random")
hist(titanic3$age)
hist(titanic3$age)
titanic3$fare = impute(titanic3$fare, 'random')
summary(impute(titanic3$fare, 'random'))
#imputed 27.7
ggplot(titanic3, aes(age, as.numeric(fare), color = pclass)) + geom_point()
copy(titanic3)
titanic_new = copy(titanic3)
mean(as.numeric(titanic_new$age), na.rm = T)
titanic_new$age = ifelse(is.na(titanic_new$age),
mean(titanic_new$age, na.rm = T), titanic_new$age)
titanic3
View(titanic3)
View(titanic3)
library(Hmisc)
titanic_new$age = impute(titanic_new$age, "random")
hist(titanic_new$age)
hist(titanic3$age)
hist(titanic_new$age)
load(titanic3)
library(PASWR)
hist(titanic3$age)
hist(titanic_new$age)
titanic_new$fare = impute(titanic_new$fare, 'random')
summary(impute(titanic_new$fare, 'random'))
#imputed 31.5
ggplot(titanic_new, aes(age, as.numeric(fare), color = pclass)) + geom_point()
ggplot(titanic_new, aes(age, as.numeric(fare), color = pclass)) + geom_point() + geom_point(aes(x=50, y=400), colour="black") + geom_point(aes(x=10, y=100), colour="black")
library(dplyr)
d1 = data.frame(400,50,NA)
names(d1)<-c('fare','age','pclass')
d2 = data.frame(100,10,NA)
names(d2)<-c('fare','age','pclass')
titanic_new =  rbind(select(titanic_new,fare,age,pclass),d1,d2)
d1
kNN(titanic_new, k=1)
imputed = kNN(titanic_new, k=1)
View(imputed)
summary(imputed)
kNN(titanic_new, variable = 'pclass', k=1)
filter(imputed, age == 50)
filter(imputed, age == 50 $ fare == 10)
filter(imputed, age == 50 & fare == 10)
titanic_new =  rbind(select(titanic_new,fare,age,pclass),d1,d2)
View(titanic_new)
View(titanic_new)
View(imputed)
titanic_new = copy(titanic3)
help("kNN")
View(titanic)
kNN(titanic_new,variable='pclass',k=sqrt(nrow(titanic_new)))
library(dplyr)
d1 = data.frame(400,50,NA)
names(d1)<-c('fare','age','pclass')
d2 = data.frame(100,10,NA)
names(d2)<-c('fare','age','pclass')
titanic_new =  rbind(select(titanic_new,fare,age,pclass),d1,d2)
```{r}
kNN(titanic_new,variable='pclass',k=sqrt(nrow(titanic_new)))
imputed_sqrt = kNN(titanic_new,variable='pclass',k=sqrt(nrow(titanic_new)))
View(imputed_sqrt)
titanic3 %>%
select('pclass', 'survived', 'sex', 'age', 'sibsp', 'parch') %>%
cbind(data, titanic_new$fare)
data
df = titanic3 %>%
select('pclass', 'survived', 'sex', 'age', 'sibsp', 'parch') %>%
cbind(data, titanic_new$fare)
df
data4 = titanic3 %>%
select('pclass', 'survived', 'sex', 'age', 'sibsp', 'parch') %>%
data4 = titanic3 %>%
select('pclass', 'survived', 'sex', 'age', 'sibsp', 'parch') %>%
cbind(data4, titanic_new$fare)
data4 = titanic3 %>%
select('pclass', 'survived', 'sex', 'age', 'sibsp', 'parch')
cbind(data4, titanic_new$fare)
nrow(data4)
nrow(titanic)
nrow(titanic_new)
titanic_new = copy(titanic3)
titanic_new$fare = impute(titanic_new$fare, 'random')
summary(impute(titanic_new$fare, 'random'))
data4 = titanic3 %>%
select('pclass', 'survived', 'sex', 'age', 'sibsp', 'parch')
cbind(data4, titanic_new$fare)
data4 = cbind(data4, titanic_new$fare)
titanic[!complete.cases(titanic),]
data4[!complete.cases(titanic),]
data4[!complete.cases(titanic),]
comp = data4[complete.cases(titanic),]
miss = data4[!complete.cases(titanic),]
nrow(comp)
View(data4)
comp = data4[!is.na(data4$age),]
miss = data4[is.na(data4$age),-4]
help(kknn)
library(kknn)
help(kknn)
data.manhattan = kknn(age ~ ., comp, miss, k = 1, distance = 1)
data.manhattan = kknn(age ~ ., comp, miss, k = 1, distance = 1)
```{r}
kknn(age ~ ., comp, miss, k = 1, distance = 1)
data.manhattan = kknn(age ~ ., comp, miss, k = 1, distance = 1)
View(data.manhattan)
View(comp)
View(miss)
data4[is.na(data4$age),-4]
load(titanic3)
data("titanic3")
titanic_new = copy(titanic3)
titanic_new$fare = impute(titanic_new$fare, 'random')
comp = data4[!is.na(data4$age),]
miss = data4[is.na(data4$age),-4]
data4 = titanic3 %>%
select('pclass', 'survived', 'sex', 'age', 'sibsp', 'parch')
data4 = cbind(data4, titanic_new$fare)
comp = data4[!is.na(data4$age),]
miss = data4[is.na(data4$age),-4]
miss
comp
data.manhattan = kknn(age ~ ., comp, miss, k = 1, distance = 1)
View(data.manhattan)
iris.manhattan = kknn(Species ~ ., complete, missing, k = 12, distance = 1)
source('~/Desktop/NYC_Data/machine learning/[02] Missingness, Imputation, & KNN Lecture Code.R')
iris.euclidean = kknn(Species ~ ., complete, missing, k = 12, distance = 2)
iris.manhattan = kknn(Species ~ ., complete, missing, k = 12, distance = 1)
##################################################
#####Using Minkowski Distance Measures in KNN#####
##################################################
library(kknn) #Load the weighted knn library.
#Separating the complete and missing observations for use in the kknn() function.
complete = iris.example[-missing.vector, ]
missing = iris.example[missing.vector, -3]
#Distance corresponds to the Minkowski power.
iris.euclidean = kknn(Species ~ ., complete, missing, k = 12, distance = 2)
summary(iris.euclidean)
iris.manhattan = kknn(Species ~ ., complete, missing, k = 12, distance = 1)
summary(iris.manhattan)
iris.manhattan = kknn(Species ~ ., complete, missing, k = 12, distance = 1)
iris.manhattan
View(iris.manhattan)
data.manhattan = kknn(age ~ ., comp, miss, k = 1, distance = 1)
data.manhattan = kknn(age ~ ., comp, miss, k = 1, distance = 2)
data.manhattan = kknn(age ~ ., comp, miss, k = 1, distance = 10)
data.manhattan = kknn(age ~ ., comp, miss, k = 1, distance = 1)
data.euclidean = kknn(age ~ ., comp, miss, k = 1, distance = 2)
data.minkowski = kknn(age ~ ., comp, miss, k = 1, distance = 10)
data.manhattan['fitted.values']
data.manhattan[['fitted.values']]
ggplot(data.manhattan, aes(age)) + geom_density()
density(data.manhattan['fitted values'])
density(data.manhattan['fitted.values'])
data.manhattan['fitted.values']
density(data.manhattan[['fitted.values']])
lines(density(data.manhattan[['fitted.values']]))
plot(density(data4$age))
data.manhattan
data.manhattan['fitted.values'][1]
data.manhattan[['fitted.values']]
help(plot)
density(data.manhattan[['fitted.values']])
plot(density(data.manhattan[['fitted.values']]))
ggplot() +
geom_density(aes(data.manhattan[['fitted.values']], color="LTV1")) +
geom_density(aes(data.euclidean[['fitted.values']], color="LTV2"))
ggplot() +
geom_density(aes(data.manhattan[['fitted.values']], color="LTV1")) +
geom_density(aes(data.euclidean[['fitted.values']], color="LTV2")) +
geom_density(aes(data.minkowski[['fitted.values']], color = 'Blue'))
ggplot() +
geom_density(aes(data.manhattan[['fitted.values']], color="LTV1")) +
geom_density(aes(data.euclidean[['fitted.values']], color="LTV2")) +
geom_density(aes(data.minkowski[['fitted.values']]))
ggplot() +
geom_density(aes(data.manhattan[['fitted.values']], "LTV1")) +
geom_density(aes(data.euclidean[['fitted.values']], color="LTV2")) +
geom_density(aes(data.minkowski[['fitted.values']]))
ggplot() +
geom_density(aes(data.manhattan[['fitted.values']], color = "Blue")) +
geom_density(aes(data.euclidean[['fitted.values']], color="LTV2")) +
geom_density(aes(data.minkowski[['fitted.values']]))
ggplot() +
geom_density(aes(data.manhattan[['fitted.values']], fill = "Blue")) +
geom_density(aes(data.euclidean[['fitted.values']], color="LTV2")) +
geom_density(aes(data.minkowski[['fitted.values']]))
ggplot() +
geom_density(aes(data.manhattan[['fitted.values']], color = "Manhattan")) +
geom_density(aes(data.euclidean[['fitted.values']], color="LTV2")) +
geom_density(aes(data.minkowski[['fitted.values']]))
ggplot() +
geom_density(aes(data.manhattan[['fitted.values']], type = "Manhattan")) +
geom_density(aes(data.euclidean[['fitted.values']], color ="Euclidean")) +
geom_density(aes(data.minkowski[['fitted.values']]), color = 'Minkowski')
ggplot() +
geom_density(aes(data.manhattan[['fitted.values']], color = "Manhattan")) +
geom_density(aes(data.euclidean[['fitted.values']], color ="Euclidean")) +
geom_density(aes(data.minkowski[['fitted.values']]), color = 'Minkowski')
ggplot() +
geom_density(aes(data.manhattan[['fitted.values']], color = "Manhattan")) +
geom_density(aes(data.euclidean[['fitted.values']], color ="Euclidean")) +
geom_density(aes(data.minkowski[['fitted.values']], color = 'Minkowski')
ggplot() +
geom_density(aes(data.manhattan[['fitted.values']], color = "Manhattan")) +
geom_density(aes(data.euclidean[['fitted.values']], color ="Euclidean")) +
geom_density(aes(data.minkowski[['fitted.values']], color = 'Minkowski'))
ggplot() +
geom_density(aes(data.manhattan[['fitted.values']], type = "Manhattan")) +
geom_density(aes(data.euclidean[['fitted.values']], color ="Euclidean")) +
geom_density(aes(data.minkowski[['fitted.values']], color = 'Minkowski'))
ggplot() +
geom_density(aes(data.manhattan[['fitted.values']], color = "Manhattan")) +
geom_density(aes(data.euclidean[['fitted.values']], color ="Euclidean")) +
geom_density(aes(data.minkowski[['fitted.values']], color = 'Minkowski'))
```{r}
ggplot() +
geom_density(aes(data.manhattan[['fitted.values']], color = "Manhattan")) +
geom_density(aes(data.euclidean[['fitted.values']], color ="Euclidean")) +
geom_density(aes(data.minkowski[['fitted.values']], color = 'Minkowski')) +
scale_color_hue(name="type")
nrow(comp)
nrow(miss)
nrow(titanic3)
n  = sqrt(nrow(comp))
data.manhattan1 = kknn(age ~ ., comp, miss, k = n, distance = 1)
data.euclidean1 = kknn(age ~ ., comp, miss, k = n, distance = 2)
data.minkowski1 = kknn(age ~ ., comp, miss, k = n, distance = 10)
ggplot() +
geom_density(aes(data.manhattan1[['fitted.values']], color = "Manhattan")) +
geom_density(aes(data.euclidean1[['fitted.values']], color ="Euclidean")) +
geom_density(aes(data.minkowski1[['fitted.values']], color = 'Minkowski')) +
scale_color_hue(name="type")
ggplot(titanic_new, aes(age, fare, color = pclass)) + geom_point()
getwd()
source('~/Desktop/project2/scraping_proj.R')
ggplot(data2, aes(x = "", y = Number, fill = Feature)) + geom_bar(width = 1, stat = 'identity') + coord_polar(theta = "y", start = 0) +
scale_fill_brewer(palette = 'Set3') + geom_text(aes(label = Number), position = position_stack(vjust = 0.5), color = "black") +
ggtitle('Percent of Apps with In-app Purchases') + theme(plot.title = element_text(hjust = 0.5),  axis.title.y=element_blank(), axis.title.x=element_blank(), legend.position="bottom", legend.title=element_blank())
ggplot(data2, aes(x = "", y = Number, fill = Feature)) + geom_bar(width = 1, stat = 'identity') + coord_polar(theta = "y", start = 0) +
scale_fill_brewer(palette = 'Set3') + geom_text(aes(label = Number), position = position_stack(vjust = 0.5), color = "black") +
ggtitle('Percent of Free Apps with In-app Purchases') + theme(plot.title = element_text(hjust = 0.5),  axis.title.y=element_blank(), axis.title.x=element_blank(), legend.position="bottom", legend.title=element_blank())
ggplot(apps_r, aes(Rating)) + geom_bar(stat = 'count', fill = "darkorchid3") + scale_x_reverse(breaks = seq(1, 5, by = 0.2)) +
ggtitle('Distribution of user ratings') + theme(plot.title = element_text(hjust = 0.5)) + geom_text(stat = 'count', aes(label=..count..), vjust=-1)
ggplot(apps_r, aes(Rating)) + geom_bar(stat = 'count', fill = "darkorchid3") + scale_x_reverse(breaks = seq(1, 5, by = 0.2)) +
ggtitle('Distribution of User Ratings') + theme(plot.title = element_text(hjust = 0.5))
source('~/Desktop/project2/scraping_proj.R')
nrow(apps)
View(apps)
View(apps)
ggplot(apps_3, aes(reorder(Category, -Percent), y =Percent, fill = Category)) + geom_boxplot() +
scale_fill_brewer(palette = 'Paired') + ggtitle('Number of Reviews as Percent of Installs') +
theme(plot.title = element_text(hjust = 0.5)) + theme(legend.position="none") + xlab('Category')
View(apps_3)
source('~/Desktop/project2/scraping_proj.R')
View(dev1)
